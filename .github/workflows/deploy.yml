name: Beautiflow CI/CD

concurrency:
  group: beautiflow-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    # 👇 [수정] build 잡에 matrix 전략 추가
    strategy:
      matrix:
        serverType: [gateway, api, chat]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle for ${{ matrix.serverType }}
        # 👇 [수정] 빌드 시 -PserverType 프로퍼티 전달
        run: ./gradlew build -PserverType=${{ matrix.serverType }} --no-daemon --parallel -x test

      - name: Package as tar.gz
        run: |
          mkdir -p dist
          # 👇 [수정] JAR 파일 이름을 역할별로 다르게 지정
          mv build/libs/beautiflow-0.0.1-SNAPSHOT.jar dist/${{ matrix.serverType }}.jar
          tar czf ${{ matrix.serverType }}.tar.gz -C dist .

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          # 👇 [수정] 아티팩트 이름도 역할별로 다르게 지정
          name: ${{ matrix.serverType }}-dist
          path: ${{ matrix.serverType }}.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: gateway
            hostSecret: GATEWAY_HOST
            serverType: gateway
          - name: api
            hostSecret: API_HOST
            serverType: api
          - name: chat
            hostSecret: CHAT_HOST
            serverType: chat

    steps:
      - name: Checkout code & scripts
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          # 👇 [수정] 배포할 서버 역할에 맞는 아티팩트를 다운로드
          name: ${{ matrix.serverType }}-dist

      # 👇 [추가] 다운로드한 파일 이름을 deploy.sh가 예상하는 이름으로 변경
      - name: Rename package for deployment
        run: mv ${{ matrix.serverType }}.tar.gz beautiflow.tar.gz

      - name: Set up SSH private key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Resolve remote host
        id: host
        run: |
          echo "HOST=${{ secrets[matrix.hostSecret] }}" >> $GITHUB_OUTPUT

      - name: Deploy to ${{ matrix.name }}
        run: |
          echo "Deploying to ${{ matrix.name }} at ${{ steps.host.outputs.HOST }}"
          
          scp -o StrictHostKeyChecking=no beautiflow.tar.gz ubuntu@${{ steps.host.outputs.HOST }}:/home/ubuntu/
          scp -o StrictHostKeyChecking=no scripts/deploy.sh ubuntu@${{ steps.host.outputs.HOST }}:/home/ubuntu/
          
          ssh -o StrictHostKeyChecking=no ubuntu@${{ steps.host.outputs.HOST }} '
            chmod +x deploy.sh
            ./deploy.sh ${{ matrix.serverType }} prod 
          '